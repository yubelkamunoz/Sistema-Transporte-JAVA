package Paneles;

import Modales.AggConductor;
import Modelo.Conexion;
import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.Font;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author YUBELKA
 */
public class ConductorHabilitados extends javax.swing.JPanel {

    ButtonGroup btnSexo;
    public ConductorHabilitados() {
        initComponents();
        txtId.setVisible(false);
        cargarDatos();
        btnSexo = new ButtonGroup();
        btnSexo.add(rbtnFemenino);
        btnSexo.add(rbtnMasculino);
    }
/////////////////////FIN ////////////////////////////////////////////////////////////////////////////////////

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFondo = new javax.swing.JPanel();
        pnlPrincipal = new javax.swing.JPanel();
        pnlTabla = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnDeshabilitados = new principal.MaterialButtomRectangle();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnDeshabilitar = new principal.MaterialButtomRectangle();
        jLabel15 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        txtId = new principal.MaterialTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCedula = new principal.MaterialTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new principal.MaterialTextField();
        jLabel8 = new javax.swing.JLabel();
        txtApellido = new principal.MaterialTextField();
        jLabel10 = new javax.swing.JLabel();
        txtFecha = new principal.MaterialTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTlf = new principal.MaterialTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnLimpiar = new principal.MaterialButtomRectangle();
        rbtnFemenino = new RSMaterialComponent.RSRadioButtonMaterial();
        rbtnMasculino = new RSMaterialComponent.RSRadioButtonMaterial();
        btnModificar = new principal.MaterialButtomRectangle();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableConductores = new rojerusan.RSTableMetro();

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jFondo.setBackground(new java.awt.Color(255, 255, 204));
        jFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlPrincipal.setLayout(new javax.swing.BoxLayout(pnlPrincipal, javax.swing.BoxLayout.LINE_AXIS));

        pnlTabla.setBackground(new java.awt.Color(255, 255, 255));
        pnlTabla.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pnlTabla.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, 890, 20));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("© 2020 ESTUDIANTE DE 2DO AÑO EN INFORMATICA MUÑOZ M. YUBELKA M. - Admin IDE TranSoft  ");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        pnlTabla.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 560, 450, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Versión 1.0");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        pnlTabla.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 60, 20));

        btnDeshabilitados.setBackground(new java.awt.Color(221, 76, 52));
        btnDeshabilitados.setForeground(new java.awt.Color(255, 255, 255));
        btnDeshabilitados.setText("Deshabilitados");
        btnDeshabilitados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshabilitadosActionPerformed(evt);
            }
        });
        pnlTabla.add(btnDeshabilitados, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 150, 40));

        jLabel11.setBackground(new java.awt.Color(204, 204, 204));
        jLabel11.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 153, 153));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Departamento de Transporte");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        pnlTabla.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 250, 30));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-eliminar-marcador-32.png"))); // NOI18N
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlTabla.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 500, 30, 30));

        btnDeshabilitar.setBackground(new java.awt.Color(153, 153, 153));
        btnDeshabilitar.setForeground(new java.awt.Color(255, 255, 255));
        btnDeshabilitar.setText("    Deshabilitar");
        btnDeshabilitar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnDeshabilitar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeshabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshabilitarActionPerformed(evt);
            }
        });
        pnlTabla.add(btnDeshabilitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 490, 180, 50));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-editar-32.png"))); // NOI18N
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlTabla.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 500, 30, 30));

        jSeparator2.setForeground(new java.awt.Color(32, 136, 203));
        pnlTabla.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 880, 10));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONDUCTORES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 1, 20))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtId.setForeground(new java.awt.Color(51, 51, 51));
        txtId.setFont(new java.awt.Font("Roboto Regular", 0, 12)); // NOI18N
        jPanel2.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 40, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Cedula :");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 80, 40));

        txtCedula.setForeground(new java.awt.Color(153, 153, 153));
        txtCedula.setText("Ingrese nro de documento");
        txtCedula.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jPanel2.add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 220, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Nombre : ");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 90, 40));

        txtNombre.setForeground(new java.awt.Color(153, 153, 153));
        txtNombre.setText("Ingrese nombre");
        txtNombre.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jPanel2.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 230, 40));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Apellido : ");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 80, 40));

        txtApellido.setForeground(new java.awt.Color(153, 153, 153));
        txtApellido.setText("Ingrese apellido");
        txtApellido.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jPanel2.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 230, 40));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Fecha de Nacimiento : ");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 160, 40));

        txtFecha.setForeground(new java.awt.Color(153, 153, 153));
        txtFecha.setText("Ingrese fecha ");
        txtFecha.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jPanel2.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 310, 40));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Telefono : ");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 90, 40));

        txtTlf.setForeground(new java.awt.Color(153, 153, 153));
        txtTlf.setText("Ingrese nro telefonico");
        txtTlf.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jPanel2.add(txtTlf, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 220, 40));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Sexo : ");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 50, 40));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-limpiador-c-32.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 30, 30));

        btnLimpiar.setBackground(new java.awt.Color(69, 87, 252));
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("   Limpiar");
        btnLimpiar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel2.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 130, 50));

        rbtnFemenino.setForeground(new java.awt.Color(153, 153, 153));
        rbtnFemenino.setText("Femenino");
        rbtnFemenino.setColorCheck(new java.awt.Color(32, 136, 203));
        rbtnFemenino.setColorUnCheck(new java.awt.Color(32, 136, 203));
        rbtnFemenino.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        jPanel2.add(rbtnFemenino, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 120, -1));

        rbtnMasculino.setForeground(new java.awt.Color(153, 153, 153));
        rbtnMasculino.setText("Masculino");
        rbtnMasculino.setColorCheck(new java.awt.Color(32, 136, 203));
        rbtnMasculino.setColorUnCheck(new java.awt.Color(32, 136, 203));
        rbtnMasculino.setFont(new java.awt.Font("Segoe UI Semilight", 0, 16)); // NOI18N
        jPanel2.add(rbtnMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 120, -1));

        pnlTabla.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 370, 460));

        btnModificar.setBackground(new java.awt.Color(153, 153, 153));
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("   MODIFICAR ");
        btnModificar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        pnlTabla.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 490, 160, 50));

        jTableConductores.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        jTableConductores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Cedula", "Nombre", "Apellido", "Fecha Nac", "Telefono", "Sexo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableConductores.setColorBackgoundHead(new java.awt.Color(32, 136, 203));
        jTableConductores.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        jTableConductores.setColorBordeHead(new java.awt.Color(255, 255, 255));
        jTableConductores.setColorFilasBackgound2(new java.awt.Color(244, 244, 244));
        jTableConductores.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
        jTableConductores.setColorFilasForeground2(new java.awt.Color(51, 51, 51));
        jTableConductores.setColorSelBackgound(new java.awt.Color(255, 76, 76));
        jTableConductores.setFocusable(false);
        jTableConductores.setFuenteFilas(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        jTableConductores.setFuenteFilasSelect(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
        jTableConductores.setFuenteHead(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jTableConductores.setGridColor(new java.awt.Color(255, 255, 255));
        jTableConductores.setGrosorBordeHead(0);
        jTableConductores.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTableConductores.setRowHeight(25);
        jTableConductores.setShowVerticalLines(false);
        jTableConductores.getTableHeader().setReorderingAllowed(false);
        jTableConductores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableConductoresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableConductores);

        pnlTabla.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 510, 390));

        pnlPrincipal.add(pnlTabla);

        jFondo.add(pnlPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 580));

        add(jFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 580));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeshabilitadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshabilitadosActionPerformed
         ConductorDeshabilitados panel = new ConductorDeshabilitados();
         new CambiaPanel(pnlPrincipal, panel);
    }//GEN-LAST:event_btnDeshabilitadosActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnDeshabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshabilitarActionPerformed
        deshabilitar();
    }//GEN-LAST:event_btnDeshabilitarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificar();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void jTableConductoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableConductoresMouseClicked
        ////////////CLICK ACTION TABLA LLENA SELECION DE UNA FILA
        btnModificar.setBackground(new Color(32,136,203));
        btnDeshabilitar.setBackground(new Color(32,136,203));
        int Fila = jTableConductores.getSelectedRow();
        /*obtener el nro de fila sellecioando*/
        System.out.println(Fila);
        int id = Integer.parseInt(jTableConductores.getValueAt(Fila, 0).toString());
        /*el valor de la fila y columna*/
        System.out.println(id);
        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion obj_con = new Conexion();
            Connection con = obj_con.getConexion();

            String SQL = "SELECT id_conductor, cedula, nombre, apellido, telefono, fecha_nacim, sexo FROM conductores "
             + "WHERE id_conductor =?"; //Consulta para cargar datos en la tabla
            ps = con.prepareStatement(SQL);
            ps.setInt(1, id);
            rs = ps.executeQuery();
            System.out.println(rs);

            while (rs.next()) {
                txtId.setText(String.valueOf(id));
                txtCedula.setText(rs.getString("cedula"));
                txtNombre.setText(rs.getString("nombre"));
                txtApellido.setText(rs.getString("apellido"));
                txtTlf.setText(rs.getString("telefono"));
                txtFecha.setText(rs.getString("fecha_nacim"));
                if(rs.getString("sexo").equals("femenino")){
                    rbtnFemenino.setSelected(true);
                }else if (rs.getString("sexo").equals("masculino")){
                    rbtnMasculino.setSelected(true);
                }
            }
        }catch (Exception e) {
          System.out.println(e.toString());
        }
    }//GEN-LAST:event_jTableConductoresMouseClicked

////////////////CARGAR DATOS////////////////////////////////////////////////////////////////////////////
    public void cargarDatos() {

        /////////////////////MODELO POR DEFAULT DE LA TABLA
        DefaultTableModel modelTable = new DefaultTableModel();
        jTableConductores.setModel(modelTable);
        jTableConductores.getTableHeader().setFont(new Font("Segoe UI Semilight", Font.BOLD, 12));
        jTableConductores.getTableHeader().setOpaque(false);
        jTableConductores.getTableHeader().setBackground(new Color(32, 136, 203));
        jTableConductores.getTableHeader().setForeground(new Color(255, 255, 255));
        jTableConductores.setRowHeight(25);
        //Titulos del header
        modelTable.addColumn("id");
        modelTable.addColumn("Cedula");
        modelTable.addColumn("Nombre");
        modelTable.addColumn("Apellido");
        modelTable.addColumn("Telefono");
        modelTable.addColumn("Fecha de Nac");
        modelTable.addColumn("Sexo");
        // Anchos del hearder
        int[] ANCHOS = {8, 30, 30, 30, 40, 30, 25};
        for (int cont = 0; cont < jTableConductores.getColumnCount(); cont++) {
            jTableConductores.getColumnModel().getColumn(cont).setPreferredWidth(ANCHOS[cont]);
        }

        /////////////////////CARGAR DATOS
        try {
            modelTable.setRowCount(0); //ASIGNO 0 A NRO DE COLUMNAS ANTES DE CARGAR DATOS PARA NO REPETIR
            PreparedStatement ps = null;
            ResultSet rs = null;
            ResultSetMetaData rsMd = null; //Obtiene los datos del rs en formato matriz
            Conexion obj_con = new Conexion();
            Connection con = obj_con.getConexion();
            int columnas;
            String SQL = "SELECT id_conductor, cedula, nombre, apellido, telefono, fecha_nacim, sexo FROM conductores "
                    + "WHERE estatus_conductor = 1"; //Consulta para cargar datos en la tabla   
            ps = con.prepareStatement(SQL);
            rs = ps.executeQuery();
            rsMd = rs.getMetaData();
            //System.out.println("El resultset MetaData del query es: " + rsMd);
            columnas = rsMd.getColumnCount();
            System.out.println(columnas + "columnas");

            while (rs.next()) {
                Object[] filas = new Object[columnas];  //Mientras rs sea true se comple la condicion
                for (int cont = 0; cont < columnas; cont++) {  //Array tipo obj le paso el nroColum 4
                    filas[cont] = rs.getObject(cont + 1);
                }
                modelTable.addRow(filas);
            }
            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            System.err.println(e.toString());
        }
    }////////////////FIN////////////////////////

////////////////GUARDAR DATOS////////////////////////////////////////////////////////////////////////////
    /*  public void Guardar() {
        int unidad = Integer.parseInt(txtTlf.getText());
        String placa = txtNombre.getText();
        int puestos = Integer.parseInt(txtFecha.getText());
        int marca = cbxMarca.getSelectedIndex();
        int modelo = cbxModelo.getSelectedIndex();
        String color = (String) cbxColor.getSelectedItem();
        String anio = (String) cbxAnio.getSelectedItem();
        int status = 1;
        int estadoActual = 0;
        String idNew = "NUEVO";

        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion obj_con = new Conexion();
            Connection con = obj_con.getConexion();
            String SQL = "INSERT INTO carros(nro_unidad, placa, color, id_marca, id_modelo, cant_puestos, ano_unidad, estatus_table, id_estado_actual) VALUES (?,?,?,?,?,?,?,?,?)";
            ps = con.prepareStatement(SQL);

            ps.setInt(1, unidad);
            ps.setString(2, placa);
            ps.setString(3, color);
            ps.setInt(4, marca);
            ps.setInt(5, modelo);
            ps.setInt(6, puestos);
            ps.setString(7, anio);
            ps.setInt(8, status);
            ps.setInt(9, estadoActual);
            System.out.println(ps);
            ps.execute();
            JOptionPane.showMessageDialog(null, "Registro Guardado Exitosamente");
            limpiar();
            cargarDatos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar registro");
            System.err.println(e.toString());
        }
    }*/////////////////FIN///////////////////////// 
////////////////LIMPIAR DATOS////////////////////////////////////////////////////////////////////////////
    public void limpiar() {
        txtId.setText(null);
        txtCedula.setText(null);
        txtNombre.setText(null);
        txtApellido.setText(null);
        txtFecha.setText(null);
        txtTlf.setText(null);
        btnSexo.clearSelection();

    } ////////////////FIN////////////////////////

////////////////MODIFICAR REGITROS////////////////////////////////////////////////////////////////////////
    public void modificar() {
        int id = Integer.parseInt(txtId.getText());
        int cedula = Integer.parseInt(txtCedula.getText());
        String nombre = txtNombre.getText();
        String apellido = txtApellido.getText();
        String telefono = txtTlf.getText();
        String fecha = txtFecha.getText();
        String sexo;
        if(rbtnFemenino.isSelected() == true){ 
            sexo = "femenino";
        }else if(rbtnMasculino.isSelected() == true){
            sexo = "masculino"; 
        }else{
            JOptionPane.showMessageDialog(null, "Usted no selecionó el sexo del conductor será moficicado a : Ninguno");
            sexo = "ninguno";
        }

        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion obj_con = new Conexion();
            Connection con = obj_con.getConexion();
            String SQL = "UPDATE `conductores` SET `cedula`=?,`nombre`=?,`apellido`=?,`telefono`=?,`fecha_nacim`=?,`sexo`=? WHERE `id_conductor`=?";
            ps = con.prepareStatement(SQL);

            ps.setInt(1, cedula);
            ps.setString(2, nombre);
            ps.setString(3, apellido);
            ps.setString(4, telefono);
            ps.setString(5, fecha);
            ps.setString(6, sexo);
            ps.setInt(7, id);
            System.out.println(ps);
            ps.execute();
            JOptionPane.showMessageDialog(null, "Registro Modificado Exitosamente");
            limpiar();
            cargarDatos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar registro");
            System.err.println(e.toString());
        }
    }////////////////FIN////////////////////////    
////////////////DESHABILITAR REGITRO////////////////////////////////////////////////////////////////////////

    public void deshabilitar() {
        int id = Integer.parseInt(txtId.getText());
        int status = 0;
        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion obj_con = new Conexion();
            Connection con = obj_con.getConexion();
            String SQL = "UPDATE `conductores` SET `estatus_conductor`=? WHERE `id_conductor`=?";
            ps = con.prepareStatement(SQL);

            ps.setInt(1, status);
            ps.setInt(2, id);
            System.out.println(ps);
            ps.execute();
            JOptionPane.showConfirmDialog(null, "¿Seguro que desea deshabilitar el conductor?");
            JOptionPane.showMessageDialog(null, "Registro Modificado Exitosamente");
            limpiar();
            cargarDatos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar registro");
            System.err.println(e.toString());
        }
    }////////////////FIN////////////////////////    

////////////////LLENAR MODAL CON DATOS DE LA TABLA/////////////////////////////////////////////////////////////
    public void tomaDatos() {
        AggConductor modal = new AggConductor();
        modal.setVisible(true);
        int Fila = jTableConductores.getSelectedRow();
        /*obtener el nro de fila sellecioando*/
        System.out.println(Fila);
        int id = Integer.parseInt(jTableConductores.getValueAt(Fila, 0).toString());
        /*el valor de la fila y columna*/
        System.out.println(id);
        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion obj_con = new Conexion();
            Connection con = obj_con.getConexion();

            String SQL = "SELECT id_unidad, nro_unidad, placa, color, id_modelo, id_marca, cant_puestos, ano_unidad FROM carros a "
                    + "WHERE id_unidad =?"; //Consulta para cargar datos en la tabla
            ps = con.prepareStatement(SQL);
            ps.setInt(1, id);
            rs = ps.executeQuery();
            //System.out.println(rs);

            while (rs.next()) {
                modal.txtId.setText(String.valueOf(id));
                modal.txtTlf.setText(rs.getString("nro_unidad"));
                modal.txtNombre.setText(rs.getString("placa"));
                modal.txtFecha.setText(rs.getString("cant_puestos"));
                /* modal.cbxMarca.setSelectedIndex(rs.getInt("id_marca"));
               // modal.cbxModelo.setSelectedIndex(rs.getInt("id_modelo"));
               // modal.cbxColor.setSelectedItem(rs.getString("color"));
                modal.cbxAnio.setSelectedItem(rs.getString("ano_unidad"));*/
            }

        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

////////////////FIN////////////////////////////////////////////////////////////////////////////////////   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private principal.MaterialButtomRectangle btnDeshabilitados;
    private principal.MaterialButtomRectangle btnDeshabilitar;
    private principal.MaterialButtomRectangle btnLimpiar;
    private principal.MaterialButtomRectangle btnModificar;
    private javax.swing.JPanel jFondo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public rojerusan.RSTableMetro jTableConductores;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JPanel pnlTabla;
    private RSMaterialComponent.RSRadioButtonMaterial rbtnFemenino;
    private RSMaterialComponent.RSRadioButtonMaterial rbtnMasculino;
    public principal.MaterialTextField txtApellido;
    public principal.MaterialTextField txtCedula;
    public principal.MaterialTextField txtFecha;
    private principal.MaterialTextField txtId;
    public principal.MaterialTextField txtNombre;
    public principal.MaterialTextField txtTlf;
    // End of variables declaration//GEN-END:variables
}
